"""empty message

Revision ID: ae64307bf82e
Revises: 
Create Date: 2020-12-13 10:10:01.052993

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime
import webapp2.extensions.database
from sqlalchemy import orm


# revision identifiers, used by Alembic.
revision = 'ae64307bf82e'
down_revision = None
branch_labels = None
depends_on = None


def get_session():
    bind = op.get_bind()
    return orm.Session( bind = bind )


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ap_feedback',
    sa.Column('f_id', sa.Integer(), nullable=False),
    sa.Column('f_name', sa.String(length=50), nullable=False),
    sa.Column('f_type', sa.Integer(), nullable=False),
    sa.Column('f_voted', sa.Integer(), nullable=False),
    sa.Column('f_subject', sa.String(length=100), nullable=False),
    sa.Column('f_message', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('f_id', name=op.f('pk_ap_feedback'))
    )
    op.create_table('gn_role',
    sa.Column('r_id', sa.Integer(), nullable=False),
    sa.Column('r_role', sa.String(length=255), nullable=False),
    sa.Column('r_remark', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.PrimaryKeyConstraint('r_id', name=op.f('pk_gn_role'))
    )
    op.create_table('locking',
    sa.Column('l_id', sa.Integer(), nullable=False),
    sa.Column('l_user', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('l_table', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('l_record_id', sa.Integer(), nullable=False),
    sa.Column('l_start_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('l_id', name=op.f('pk_locking'))
    )
    op.create_table('news',
    sa.Column('n_id', sa.Integer(), nullable=False),
    sa.Column('n_active', sa.Boolean(), nullable=True),
    sa.Column('n_alert', sa.Boolean(), nullable=True),
    sa.Column('n_keep', sa.Boolean(), nullable=True),
    sa.Column('n_message', sa.Text(), nullable=True),
    sa.Column('n_start_date', sa.Date(), nullable=True),
    sa.Column('n_end_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('n_id', name=op.f('pk_news'))
    )
    op.create_table('tracking',
    sa.Column('t_id', sa.Integer(), nullable=False),
    sa.Column('t_user', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('t_table', webapp2.extensions.database.LONGTEXT(), nullable=False),
    sa.Column('t_action', sa.Integer(), nullable=False),
    sa.Column('t_record_id', sa.Integer(), nullable=False),
    sa.Column('t_change_date_time', sa.DateTime(), nullable=False),
    sa.Column('t_contents', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.PrimaryKeyConstraint('t_id', name=op.f('pk_tracking'))
    )
    op.create_table('gn_user',
    sa.Column('u_id', sa.Integer(), nullable=False),
    sa.Column('u_active', sa.Boolean(), nullable=True),
    sa.Column('u_name', sa.String(length=30), nullable=False),
    sa.Column('u_role', sa.Integer(), nullable=True),
    sa.Column('u_hash_password', sa.String(length=255), nullable=False),
    sa.Column('u_must_change', sa.Boolean(), nullable=True),
    sa.Column('u_first_name', sa.String(length=50), nullable=False),
    sa.Column('u_middle_name', sa.String(length=50), nullable=True),
    sa.Column('u_last_name', sa.String(length=50), nullable=False),
    sa.Column('u_email', sa.String(length=100), nullable=False),
    sa.Column('u_access_token', sa.String(length=512), nullable=True),
    sa.Column('u_refresh_token', sa.String(length=512), nullable=True),
    sa.Column('u_token_dt', sa.DateTime(), nullable=True),
    sa.Column('u_create_dt', sa.DateTime(), nullable=True),
    sa.Column('u_remark', webapp2.extensions.database.LONGTEXT(), nullable=True),
    sa.Column('u_locale', sa.Integer(), nullable=True),
    sa.Column('u_listitems', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['u_role'], ['gn_role.r_id'], name=op.f('fk_gn_user_u_role_gn_role')),
    sa.PrimaryKeyConstraint('u_id', name=op.f('pk_gn_user'))
    )
    ### end Alembic commands ###
    session = get_session()
    from backend.gn_role import Role

    session.add( Role( R_ROLE = 'Administrator', R_REMARK = 'Application administrator' ) )
    session.add( Role( R_ROLE = 'Test engineer', R_REMARK = '' ) )

    session.commit()


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('gn_user')
    op.drop_table('tracking')
    op.drop_table('news')
    op.drop_table('locking')
    op.drop_table('gn_role')
    op.drop_table('ap_feedback')
    ### end Alembic commands ###
